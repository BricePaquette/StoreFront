@model StoreFront.DATA.EF.Models.Product

@{
    ViewData["Title"] = "Delete";
}

@{
    ViewData["Title"] = "Delete " + Model.ProductName + "?";
}

<section class="breadcrumb_part">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb_iner">
                    <h2>@ViewData["Title"]</h2>
                    <p>This will permantly delete @Model.ProductName</p>
                </div>
            </div>
        </div>
    </div>


</section>
<div class="container">
    <div class="row">

        <div class="text-center">
            <p>
                @Html.DisplayNameFor(model => model.ProductName): <strong>@Html.DisplayFor(model => model.ProductName)</strong> <br />
                @Html.DisplayNameFor(model => model.ProductDescription): <strong>@Html.DisplayFor(model => model.ProductDescription)</strong><br />
                @Html.DisplayNameFor(model => model.IsDiscontinued): <strong>@Html.DisplayFor(model => model.IsDiscontinued)</strong><br />
                @Html.DisplayNameFor(model => model.ProductCount): <strong>@Html.DisplayFor(model => model.ProductCount)</strong><br />
                @Html.DisplayNameFor(model => model.ProductPrice): <strong>@Html.DisplayFor(model => model.ProductPrice)</strong><br />
                @Html.DisplayNameFor(model => model.ProductImage): <strong>@Html.DisplayFor(model => model.ProductImage) </strong><br />
                @Html.DisplayNameFor(model => model.UnitsOnOrder): <strong>@Html.DisplayFor(model => model.UnitsOnOrder)</strong><br />
                @Html.DisplayNameFor(model => model.Category.CategoryName): <strong>@Html.DisplayFor(model => model.Category.CategoryName)</strong><br />
            </p>
            <form asp-action="Delete">
                <input type="hidden" asp-for="ProductId" />
                <input type="submit" value="Delete" class="btn btn-danger" /> |
                <a asp-action="Index">Back to List</a>
            </form>
        </div>
    </div>
</div>
@*<dl class="row">
    <dt class="offset-xs-2 col-xs-2 offset-sm-3 col-sm-3 offset-md-4 col-md-2 offset-lg-4 col-lg-2 offset-xl-4 col-xl-2">
        @Html.DisplayNameFor(model => model.ProductName)
    </dt>
    <dd class="col-xs-6 col-sm-6 col-md-6 col-lg-6 col-xl-6">
        @Html.DisplayFor(model => model.ProductName)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.ProductDescription)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.ProductDescription)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.IsDiscontinued)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.IsDiscontinued)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.ProductCount)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.ProductCount)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.ProductPrice)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.ProductPrice)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.ProductImage)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.ProductImage)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.UnitsOnOrder)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.UnitsOnOrder)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.Category)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.Category.CategoryName)
    </dd>
</dl>*@



